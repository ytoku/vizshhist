name: Release

permissions:
  contents: write

on:
  push:
    tags: [ "v*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        job:
          # - { os: ubuntu-latest  , target: x86_64-unknown-linux-gnu       }
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-musl      }
          # - { os: ubuntu-latest  , target: armv7-unknown-linux-gnueabihf  }
          # - { os: ubuntu-latest  , target: armv7-unknown-linux-musleabihf }
          # - { os: ubuntu-latest  , target: aarch64-unknown-linux-gnu      }
          - { os: ubuntu-latest  , target: aarch64-unknown-linux-musl     }
          # - { os: macos-latest   , target: x86_64-apple-darwin            }
          # - { os: macos-latest   , target: aarch64-apple-darwin           }
          # - { os: windows-latest , target: x86_64-pc-windows-msvc         }

    runs-on: ${{ matrix.job.os }}

    steps:
    - name: Setup aarch64-unknown-linux cross compiler
      if: startsWith(matrix.job.target, 'aarch64-unknown-linux-')
      run: |
        sudo apt-get install gcc-aarch64-linux-gnu
        mkdir -p ~/.cargo
        echo "[target.${{ matrix.job.target }}]" >> ~/.cargo/config.toml
        echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml

    - name: Setup rust target
      run: rustup target add ${{ matrix.job.target }}

    - uses: actions/checkout@v4

    - name: Build
      run: cargo build --release --target ${{ matrix.job.target }}

    - name: Archive artifacts
      run: |
        cd target/${{ matrix.job.target }}/release/
        tar zcvf vizshhist-${{ github.ref_name }}-${{ matrix.job.target }}.tar.gz vizshhist

    - name: Upload artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: target/${{ matrix.job.target }}/release/vizshhist-${{ github.ref_name }}-${{ matrix.job.target }}.tar.gz
